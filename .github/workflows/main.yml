name: Build and Release Flutter App

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
      - run: flutter pub get
      - run: flutter build apk --release
      - uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
      - run: flutter pub get
      - run: flutter build windows --release
      - uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: build/windows/x64/runner/Release/

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
      - run: sudo apt-get update && sudo apt-get install -y clang ninja-build pkg-config libgtk-3-dev
      - run: flutter pub get
      - run: flutter build linux --release
      - uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: build/linux/x64/release/bundle/

  ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
      - run: flutter pub get

      # Unsigned build
    #   - run: flutter build ios --release --no-codesign
    #   - uses: actions/upload-artifact@v4
    #     with:
    #       name: ios-app
    #       path: build/ios/iphoneos/

      # Signed build
            # Decode cert & profile
      - run: |
          echo "${{ secrets.P12_BASE64 }}" | base64 --decode > signing.p12
          echo "${{ secrets.MOBILEPROVISION_BASE64 }}" | base64 --decode > profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      # Import cert to keychain
      - run: |
          security create-keychain -p "" build.keychain
          security import signing.p12 -t agg -k ~/Library/Keychains/build.keychain -P "${{ secrets.CERT_PASSWORD }}" -A
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          
      - name: Debug project file
        run: |
          echo "=== Current DEVELOPMENT_TEAM entries ==="
          grep -n "DEVELOPMENT_TEAM" ios/Runner.xcodeproj/project.pbxproj || echo "No DEVELOPMENT_TEAM found"
          echo "=== Current CODE_SIGN_STYLE entries ==="
          grep -n "CODE_SIGN_STYLE" ios/Runner.xcodeproj/project.pbxproj || echo "No CODE_SIGN_STYLE found"
          echo "=== Current PRODUCT_BUNDLE_IDENTIFIER entries ==="
          grep -n "PRODUCT_BUNDLE_IDENTIFIER" ios/Runner.xcodeproj/project.pbxproj || echo "No PRODUCT_BUNDLE_IDENTIFIER found"
          
      - name: Debug provisioning profile
        run: |
          security cms -D -i profile.mobileprovision | plutil -p -

      - name: Regenerate iOS platform with correct bundle ID
        run: |
          flutter clean
          rm -rf ios/
          # Create with bundle ID that matches provisioning profile
          flutter create --platform=ios --org=${{ secrets.APPLE_TEAM_ID }}.com.christmaskid .
          flutter pub get

      - name: Set Development Team
        run: |
          # Add DEVELOPMENT_TEAM to all build configurations
          sed -i '' '/PRODUCT_BUNDLE_IDENTIFIER = com.christmaskid.peakflowmeter;/a\
                DEVELOPMENT_TEAM = ${{ secrets.APPLE_TEAM_ID }};
          ' ios/Runner.xcodeproj/project.pbxproj

      - name: Debug project file
        run: |
          echo "=== Current DEVELOPMENT_TEAM entries ==="
          grep -n "DEVELOPMENT_TEAM" ios/Runner.xcodeproj/project.pbxproj || echo "No DEVELOPMENT_TEAM found"
          echo "=== Current CODE_SIGN_STYLE entries ==="
          grep -n "CODE_SIGN_STYLE" ios/Runner.xcodeproj/project.pbxproj || echo "No CODE_SIGN_STYLE found"
          echo "=== Current PRODUCT_BUNDLE_IDENTIFIER entries ==="
          grep -n "PRODUCT_BUNDLE_IDENTIFIER" ios/Runner.xcodeproj/project.pbxproj || echo "No PRODUCT_BUNDLE_IDENTIFIER found"
          
      # Build signed IPA
      - run: |
         flutter build ipa --release
      - uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: build/ios/ipa/*.ipa

  release:
    needs: [android, windows, linux, ios]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Android artifact
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: release/

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-exe
          path: release/windows/

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-app
          path: release/linux/

      - name: Download iOS artifact
        uses: actions/download-artifact@v4
        with:
          name: ios-app
          path: release/ios/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
