name: Build and Release Flutter App

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
      - run: flutter pub get
      - run: flutter build apk --release
      - uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
      - run: flutter pub get
      - run: flutter build windows --release
      - uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: build/windows/x64/runner/Release/

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
      - run: sudo apt-get update && sudo apt-get install -y clang ninja-build pkg-config libgtk-3-dev
      - run: flutter pub get
      - run: flutter build linux --release
      - uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: build/linux/x64/release/bundle/

  ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
      - run: flutter pub get

      # Unsigned build
    #   - run: flutter build ios --release --no-codesign
    #   - uses: actions/upload-artifact@v4
    #     with:
    #       name: ios-app
    #       path: build/ios/iphoneos/

      # Signed build
      - name: Create Folder for certificates and profiles
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mkdir -p ~/Library/MobileDevice/Certificates/

      # decode and save the p12 and provisioning files stored as secrets
      - name: Get Certificate
        id: certFileDecode
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: 'certificate.p12'
          encodedString: ${{ secrets.P12_BASE64 }}
      - name: Copy Certificate
        run: mv ${{ steps.certFileDecode.outputs.filePath }} ~/Library/MobileDevice/Certificates/certificate.p12
       
      - name: Get Profile
        id: profFileDecode
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: 'decoded.mobileprovision'
          encodedString: ${{ secrets.MOBILEPROVISION_BASE64 }}
      - name: Copy Profiles
        run: mv ${{ steps.profFileDecode.outputs.filePath }} ~/Library/MobileDevice/Provisioning\ Profiles/decoded.mobileprovision
      
      # Build signed IPA
      - run: |
          flutter build ipa --release --no-codesign
      - uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/ios/ipa/*.ipa

  release:
    needs: [android, windows, linux, ios]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Android artifact
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: release/

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-exe
          path: release/windows/

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-app
          path: release/linux/

      - name: Download iOS artifact
        uses: actions/download-artifact@v4
        with:
          name: ios-app
          path: release/ios/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
